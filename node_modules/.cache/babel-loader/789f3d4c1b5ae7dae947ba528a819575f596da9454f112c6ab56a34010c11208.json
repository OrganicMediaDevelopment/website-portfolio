{"ast":null,"code":"var _jsxFileName = \"/Users/asturm/portfolio-app/src/pages/experience.js\",\n  _s = $RefreshSig$();\n/* © 2023 Organic Media Development. All Rights reserved. For more information: contact@organicmediadevelopment.com */\n\nimport * as React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport { render } from 'react-dom';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Experience() {\n  _s();\n  const [data, setData] = useState([]);\n  const getData = () => {\n    fetch('../experience.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (myJson) {\n      console.dir(myJson);\n      setData(myJson);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [\" \", \" \", /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 8\n      },\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body\",\n        align: \"center\",\n        color: \"text.secondary\",\n        paragraph: true,\n        children: \"I am an independently motivated worker, dedicated to continuous learning, and persistent in improving computer user experiences. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 8\n      },\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h2\",\n        variant: \"h4\",\n        align: \"center\",\n        color: \"text.primary\",\n        style: {\n          \"font-variant\": \"small-caps\"\n        },\n        gutterBottom: true,\n        children: \"Experience \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [\" \", data.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h8\",\n                component: \"h3\",\n                sx: {\n                  color: '#556b2f'\n                },\n                children: [\" \", card.category, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 5\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  \"column-count\": \"2\"\n                },\n                children: [\" \", card.skills.map(skill => /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\" \", skill.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 35\n                }, this)), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 18\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 5\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 5\n          }, this), \" \"]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(Experience, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","render","Button","Card","CardActions","CardContent","CardMedia","Grid","Stack","Box","Typography","Container","Link","Experience","data","setData","getData","fetch","headers","then","response","json","myJson","console","dir","py","map","card","height","display","flexDirection","flexGrow","color","category","skills","skill","name","id"],"sources":["/Users/asturm/portfolio-app/src/pages/experience.js"],"sourcesContent":["/* © 2023 Organic Media Development. All Rights reserved. For more information: contact@organicmediadevelopment.com */\n\nimport * as React from 'react';\nimport {\n\tuseState,\n\tuseEffect,\n\tuseCallback\n} from 'react';\nimport {\n\trender\n} from 'react-dom';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\n\nexport default function Experience() {\n\tconst [data, setData] = useState([]);\n\n\tconst getData = () => {\n\t\tfetch('../experience.json', {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Accept': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function(response) {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(function(myJson) {\n\t\t\t\tconsole.dir(myJson)\n\t\t\t\tsetData(myJson)\n\t\t\t});\n\t}\n\tuseEffect(() => {\n\t\tgetData()\n\t}, [])\n\n\treturn (\n\n\t\t<\n\t\tmain > {\n\t\t\t/* Hero unit */ } <\n\t\tContainer sx = {\n\t\t\t{\n\t\t\t\tpy: 8\n\t\t\t}\n\t\t}\n\t\tmaxWidth = \"sm\" >\n\t\t<\n\t\tTypography variant = \"body\"\n\t\talign = \"center\"\n\t\tcolor = \"text.secondary\"\n\t\tparagraph >\n\t\tI am an independently motivated worker, dedicated to continuous learning, and persistent in improving computer user experiences. <\n\t\t/Typography> <\n\t\t/Container> <\n\t\tContainer sx = {\n\t\t\t{\n\t\t\t\tpy: 8\n\t\t\t}\n\t\t}\n\t\tmaxWidth = \"md\" >\n\t\t<\n\t\tTypography component = \"h2\"\n\t\tvariant = \"h4\"\n\t\talign = \"center\"\n\t\tcolor = \"text.primary\"\n\t\tstyle = {\n\t\t\t{\n\t\t\t\t\"font-variant\": \"small-caps\"\n\t\t\t}\n\t\t}\n\t\tgutterBottom >\n\t\tExperience <\n\t\t/Typography> {\n\t\t\t/* End hero unit */ } <\n\t\tGrid container spacing = {\n\t\t\t4\n\t\t} > {\n\t\t\tdata.map((card) => ( <\n\t\t\t\tGrid item key = {\n\t\t\t\t\tcard.id\n\t\t\t\t}\n\t\t\t\txs = {\n\t\t\t\t\t12\n\t\t\t\t}\n\t\t\t\tsm = {\n\t\t\t\t\t6\n\t\t\t\t}\n\t\t\t\tmd = {\n\t\t\t\t\t4\n\t\t\t\t} >\n\t\t\t\t<\n\t\t\t\tCard sx = {\n\t\t\t\t\t{\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'column'\n\t\t\t\t\t}\n\t\t\t\t} >\n\n\t\t\t\t<\n\t\t\t\tCardContent sx = {\n\t\t\t\t\t{\n\t\t\t\t\t\tflexGrow: 1\n\t\t\t\t\t}\n\t\t\t\t} >\n\t\t\t\t<\n\t\t\t\tTypography gutterBottom variant = \"h8\"\n\t\t\t\tcomponent = \"h3\"\n\t\t\t\tsx = {\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: '#556b2f'\n\t\t\t\t\t}\n\t\t\t\t} > {\n\t\t\t\t\tcard.category\n\t\t\t\t} <\n\t\t\t\t/Typography> <\n\t\t\t\tdiv style = {\n\t\t\t\t\t{\n\t\t\t\t\t\t\"column-count\": \"2\"\n\t\t\t\t\t}\n\t\t\t\t} > {\n\t\t\t\t\tcard.skills.map((skill) => ( <\n\t\t\t\t\t\tTypography > {\n\t\t\t\t\t\t\tskill.name\n\t\t\t\t\t\t} <\n\t\t\t\t\t\t/Typography>\n\t\t\t\t\t))\n\t\t\t\t} <\n\t\t\t\t/div> <\n\t\t\t\t/CardContent> <\n\t\t\t\t/Card> <\n\t\t\t\t/Grid>\n\t\t\t))\n\t\t} <\n\t\t/Grid> <\n\t\t/Container> <\n\t\t/main>\n\n\t);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}